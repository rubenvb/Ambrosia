This file lists a couple of items that need drastic improvement or general
code cleanup.

1. ambrosia::error class
    This seemed the best way to handle internal library errors, and to be able
    to abstract away return codes up to the level of Ambrosia's application
    states. Apart from the ugly syntax, it works quite well except in:
     - begin::event(), in case 0, where a lot of checks need to be made because
     this is the only place where an end_state can be returned.

2. target_parser integration into nectar_loader
    It should be perfectly possible to integrate target_parser into nectar_loader,
     or at least integrate the text parsing into nectar_loader and have target_parser
     as a utility class/function set. Currently, the real parsing is handled in reader,
     and thus must be called externally, while it's a normal step of the "nectar
     loading" process
